// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.2.0.0
//      SpecFlow Generator Version:2.2.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace PencilJoyTests.BddCore.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.2.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Editing currency and check price for a book")]
    public partial class EditingCurrencyAndCheckPriceForABookFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Currency.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Editing currency and check price for a book", "\tIn order to edit currency for order\r\n\tAs a customer\r\n\tThe user wants to be able " +
                    "to edit currency for order", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("The user edits currency for checking currency and price in the button on the prev" +
            "iew page")]
        [NUnit.Framework.CategoryAttribute("previewPage")]
        public virtual void TheUserEditsCurrencyForCheckingCurrencyAndPriceInTheButtonOnThePreviewPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("The user edits currency for checking currency and price in the button on the prev" +
                    "iew page", new string[] {
                        "previewPage"});
#line 7
this.ScenarioSetup(scenarioInfo);
#line 8
    testRunner.Given("The user is a customer", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 9
    testRunner.And("The user is on preview page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 10
    testRunner.When("The user clicks the dropdown with currency and chooses currency item", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 11
    testRunner.Then("The currency is changed in the button \"Order for\" as a currency item", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 12
 testRunner.And("The price for a book in the button \"Order for...\" is edited.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("The user edits currency on the message page for checking currency on the bag page" +
            "")]
        [NUnit.Framework.CategoryAttribute("messagePage")]
        public virtual void TheUserEditsCurrencyOnTheMessagePageForCheckingCurrencyOnTheBagPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("The user edits currency on the message page for checking currency on the bag page" +
                    "", new string[] {
                        "messagePage"});
#line 15
this.ScenarioSetup(scenarioInfo);
#line 16
    testRunner.Given("The user is a customer", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 17
    testRunner.And("The user is on the message page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 18
    testRunner.When("The user clicks the dropdown with currency and chooses currency item", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 19
 testRunner.And("The user clicks \"Next\" for redirecting to the bag page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 20
    testRunner.Then("The currency in the field \"Subtotal\" on the bag page is should be equal selected " +
                    "currency item", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 21
 testRunner.And("The currency in the field \"Grand Total\" on the bag page is should be equal select" +
                    "ed currency item", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 22
 testRunner.And("The active currency in the dropdown with currencies on the bag page should be equ" +
                    "al  selected currency item", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("The user edits currency using dropdown in the footer on the bag page")]
        [NUnit.Framework.CategoryAttribute("bagPage")]
        [NUnit.Framework.CategoryAttribute("dropdownFooter")]
        public virtual void TheUserEditsCurrencyUsingDropdownInTheFooterOnTheBagPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("The user edits currency using dropdown in the footer on the bag page", new string[] {
                        "bagPage",
                        "dropdownFooter"});
#line 25
this.ScenarioSetup(scenarioInfo);
#line 26
    testRunner.Given("The user is a customer", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 27
    testRunner.And("The user is on the bag page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 28
    testRunner.When("The user clicks the dropdown with currencies in the footer and chooses currency i" +
                    "tem", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 29
    testRunner.Then("The currency in the field \"Subtotal\" on the bag page is  should be equal selected" +
                    " currency item", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 30
 testRunner.And("The currency in the field \"Grand Total\" on the bag page is  should be equal selec" +
                    "ted currency item", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 31
 testRunner.And("The active currency in the dropdown with currencies on the bag page should be equ" +
                    "al  selected currency item", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("The user edits currency using dropdown on the bag page")]
        [NUnit.Framework.CategoryAttribute("bagPage")]
        [NUnit.Framework.CategoryAttribute("dropdown")]
        public virtual void TheUserEditsCurrencyUsingDropdownOnTheBagPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("The user edits currency using dropdown on the bag page", new string[] {
                        "bagPage",
                        "dropdown"});
#line 34
this.ScenarioSetup(scenarioInfo);
#line 35
    testRunner.Given("The user is a customer", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 36
    testRunner.And("The user is on the bag page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 37
    testRunner.When("The user clicks the dropdown with currencies and chooses currency item", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 38
    testRunner.Then("The currency in the field \"Subtotal\" on the bag page should be equal selected cur" +
                    "rency item", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 39
 testRunner.And("The currency in the field \"Grand Total\" on the bag page should be equal selected " +
                    "currency item", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 40
 testRunner.And("The active currency in the dropdown with currencies ib the footer should be equal" +
                    " selected currency item", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
