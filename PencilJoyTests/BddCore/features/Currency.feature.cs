// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.2.0.0
//      SpecFlow Generator Version:2.2.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace PencilJoyTests.BddCore.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.2.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Editing currency and check price for a book")]
    public partial class EditingCurrencyAndCheckPriceForABookFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Currency.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Editing currency and check price for a book", "\tIn order to edit currency for order\r\n\tAs a customer\r\n\tThe user wants to be able " +
                    "to edit currency for order", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("The user edits currency for checking currency and price in the button on the prev" +
            "iew page")]
        [NUnit.Framework.CategoryAttribute("positive")]
        [NUnit.Framework.CategoryAttribute("previewPage")]
        [NUnit.Framework.TestCaseAttribute("USD", null)]
        [NUnit.Framework.TestCaseAttribute("GBP", null)]
        [NUnit.Framework.TestCaseAttribute("EUR", null)]
        [NUnit.Framework.TestCaseAttribute("JPY", null)]
        [NUnit.Framework.TestCaseAttribute("AUD", null)]
        [NUnit.Framework.TestCaseAttribute("CHF", null)]
        [NUnit.Framework.TestCaseAttribute("CAD", null)]
        [NUnit.Framework.TestCaseAttribute("SEK", null)]
        [NUnit.Framework.TestCaseAttribute("NZD", null)]
        public virtual void TheUserEditsCurrencyForCheckingCurrencyAndPriceInTheButtonOnThePreviewPage(string currency, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "positive",
                    "previewPage"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("The user edits currency for checking currency and price in the button on the prev" +
                    "iew page", @__tags);
#line 7
this.ScenarioSetup(scenarioInfo);
#line 8
    testRunner.Given("The user is a customer", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 9
    testRunner.And("The user is on preview page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 10
    testRunner.When(string.Format("The user clicks the dropdown with currency and chooses currency item as {0}", currency), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 11
    testRunner.Then(string.Format("The currency is changed in the button \"Order for\" as {0}", currency), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 12
 testRunner.And("The price for a book in the button \"Order for...\" is edited.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("The user edits currency on the message page for checking currency on the bag page" +
            "")]
        [NUnit.Framework.CategoryAttribute("positive")]
        [NUnit.Framework.CategoryAttribute("messagePage")]
        [NUnit.Framework.TestCaseAttribute("USD", null)]
        [NUnit.Framework.TestCaseAttribute("GBP", null)]
        [NUnit.Framework.TestCaseAttribute("EUR", null)]
        [NUnit.Framework.TestCaseAttribute("JPY", null)]
        [NUnit.Framework.TestCaseAttribute("AUD", null)]
        [NUnit.Framework.TestCaseAttribute("CHF", null)]
        [NUnit.Framework.TestCaseAttribute("CAD", null)]
        [NUnit.Framework.TestCaseAttribute("SEK", null)]
        [NUnit.Framework.TestCaseAttribute("NZD", null)]
        public virtual void TheUserEditsCurrencyOnTheMessagePageForCheckingCurrencyOnTheBagPage(string currency, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "positive",
                    "messagePage"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("The user edits currency on the message page for checking currency on the bag page" +
                    "", @__tags);
#line 26
this.ScenarioSetup(scenarioInfo);
#line 27
    testRunner.Given("The user is a customer", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 28
    testRunner.And("The user is on the message page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 29
    testRunner.When(string.Format("The user clicks the dropdown with currency and chooses currency item as {0}", currency), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 30
 testRunner.And("The user clicks \"Next\" for redirecting to the bag page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 31
    testRunner.Then(string.Format("The currency in the field \"Subtotal\" on the bag page is {0}", currency), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 32
 testRunner.And(string.Format("The currency in the field \"Grand Total\" on the bag page is {0}", currency), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 33
 testRunner.And(string.Format("The active currency in the dropdown with currencies on the bag page should be equ" +
                        "al {0}", currency), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("The user edits currency using dropdown in the footer on the bag page")]
        [NUnit.Framework.CategoryAttribute("positive")]
        [NUnit.Framework.CategoryAttribute("bagPage")]
        [NUnit.Framework.CategoryAttribute("dropdownFooter")]
        [NUnit.Framework.TestCaseAttribute("USD", null)]
        [NUnit.Framework.TestCaseAttribute("GBP", null)]
        [NUnit.Framework.TestCaseAttribute("EUR", null)]
        [NUnit.Framework.TestCaseAttribute("JPY", null)]
        [NUnit.Framework.TestCaseAttribute("AUD", null)]
        [NUnit.Framework.TestCaseAttribute("CHF", null)]
        [NUnit.Framework.TestCaseAttribute("CAD", null)]
        [NUnit.Framework.TestCaseAttribute("SEK", null)]
        [NUnit.Framework.TestCaseAttribute("NZD", null)]
        public virtual void TheUserEditsCurrencyUsingDropdownInTheFooterOnTheBagPage(string currency, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "positive",
                    "bagPage",
                    "dropdownFooter"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("The user edits currency using dropdown in the footer on the bag page", @__tags);
#line 47
this.ScenarioSetup(scenarioInfo);
#line 48
    testRunner.Given("The user is a customer", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 49
    testRunner.And("The user is on the bag page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 50
    testRunner.When(string.Format("The user clicks the dropdown with currencies in the footer and chooses currency i" +
                        "tem as {0}", currency), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 51
    testRunner.Then(string.Format("The currency in the field \"Subtotal\" on the bag page is  should be equal {0}", currency), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 52
 testRunner.And(string.Format("The currency in the field \"Grand Total\" on the bag page is  should be equal {0}", currency), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 53
 testRunner.And(string.Format("The active currency in the dropdown with currencies on the bag page should be equ" +
                        "al  {0}", currency), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("The user edits currency using dropdown on the bag page")]
        [NUnit.Framework.CategoryAttribute("positive")]
        [NUnit.Framework.CategoryAttribute("bagPage")]
        [NUnit.Framework.CategoryAttribute("dropdown")]
        [NUnit.Framework.TestCaseAttribute("USD", null)]
        [NUnit.Framework.TestCaseAttribute("GBP", null)]
        [NUnit.Framework.TestCaseAttribute("EUR", null)]
        [NUnit.Framework.TestCaseAttribute("JPY", null)]
        [NUnit.Framework.TestCaseAttribute("AUD", null)]
        [NUnit.Framework.TestCaseAttribute("CHF", null)]
        [NUnit.Framework.TestCaseAttribute("CAD", null)]
        [NUnit.Framework.TestCaseAttribute("SEK", null)]
        [NUnit.Framework.TestCaseAttribute("NZD", null)]
        public virtual void TheUserEditsCurrencyUsingDropdownOnTheBagPage(string currency, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "positive",
                    "bagPage",
                    "dropdown"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("The user edits currency using dropdown on the bag page", @__tags);
#line 67
this.ScenarioSetup(scenarioInfo);
#line 68
    testRunner.Given("The user is a customer", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 69
    testRunner.And("The user is on the bag page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 70
    testRunner.When(string.Format("The user clicks the dropdown with currencies and chooses currency item as {0}", currency), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 71
    testRunner.Then(string.Format("The currency in the field \"Subtotal\" on the bag page should be equal {0}", currency), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 72
 testRunner.And(string.Format("The currency in the field \"Grand Total\" on the bag page should be equal {0}", currency), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 73
 testRunner.And(string.Format("The active currency in the dropdown with currencies ib the footer should be equal" +
                        " {0}", currency), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
