// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.2.0.0
//      SpecFlow Generator Version:2.2.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace PencilJoyTests.BddCore.Features.Checkout.AddressingOrder
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.2.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Order addressing validation")]
    [NUnit.Framework.CategoryAttribute("checkout")]
    public partial class OrderAddressingValidationFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "ValidationAddresses.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Order addressing validation", "    In order to avoid making mistakes when addressing an order\r\n    As an Custome" +
                    "r\r\n    I want to be prevented from adding it without specifying required fields " +
                    "and checked incorrect data to fields", ProgrammingLanguage.CSharp, new string[] {
                        "checkout"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Shipping address without any filling fields")]
        [NUnit.Framework.CategoryAttribute("ui")]
        [NUnit.Framework.CategoryAttribute("negative")]
        [NUnit.Framework.CategoryAttribute("shipping")]
        public virtual void ShippingAddressWithoutAnyFillingFields()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Shipping address without any filling fields", new string[] {
                        "ui",
                        "negative",
                        "shipping"});
#line 8
    this.ScenarioSetup(scenarioInfo);
#line 9
        testRunner.Given("The user is a customer", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 10
        testRunner.And("The user is on the checkout page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 11
        testRunner.When("The user does not specify any shipping address information", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 12
        testRunner.And("The user  tries to complete the addressing step", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 13
        testRunner.Then("The user should be notified that all fields in the block \"Shipping address\" are r" +
                    "equired", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Billing address without any filling fields")]
        [NUnit.Framework.CategoryAttribute("ui")]
        [NUnit.Framework.CategoryAttribute("negative")]
        [NUnit.Framework.CategoryAttribute("billing")]
        public virtual void BillingAddressWithoutAnyFillingFields()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Billing address without any filling fields", new string[] {
                        "ui",
                        "negative",
                        "billing"});
#line 16
    this.ScenarioSetup(scenarioInfo);
#line 17
        testRunner.Given("The user is a customer", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 18
        testRunner.And("The user is on the checkout page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 19
  testRunner.And("The user clicks the checkbox Bill to this address", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 20
        testRunner.When("The user does not specify any billing address information", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 21
        testRunner.And("The user  tries to complete the addressing step", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 22
        testRunner.Then("The user should be notified that all fields in the block \"Billing address\" are re" +
                    "quired", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Shipping address without the first name and the last name")]
        [NUnit.Framework.CategoryAttribute("ui")]
        [NUnit.Framework.CategoryAttribute("negative")]
        [NUnit.Framework.CategoryAttribute("shipping")]
        [NUnit.Framework.TestCaseAttribute("", "", "549 Dawn Parkway", "Talisay", "0409-7938", "+63 (655) 490-8096", "22", "Libertad", null)]
        public virtual void ShippingAddressWithoutTheFirstNameAndTheLastName(string usernameS, string lastnameS, string streetS, string cityS, string zipCodeS, string phoneS, string numberCountryS, string regionS, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ui",
                    "negative",
                    "shipping"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Shipping address without the first name and the last name", @__tags);
#line 25
    this.ScenarioSetup(scenarioInfo);
#line 26
        testRunner.Given("The user is a customer", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 27
        testRunner.And("The user is on the checkout page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 28
        testRunner.When(string.Format("The user specifies  in shipping address all fields becides fields First name and " +
                        "Last name as {0} {1} {2} {3} {4} {5} {6} {7}", usernameS, lastnameS, streetS, cityS, zipCodeS, phoneS, numberCountryS, regionS), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 29
        testRunner.And("The user  tries to complete the addressing step", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 30
        testRunner.Then("The user should be notified that the \"First name\" in the block \"Shipping address\"" +
                    " is required", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 31
  testRunner.And("The user should be notified that the \"Last name\" in the block \"Shipping address\" " +
                    "is required", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Billing address without the first name and the last name")]
        [NUnit.Framework.CategoryAttribute("ui")]
        [NUnit.Framework.CategoryAttribute("negative")]
        [NUnit.Framework.CategoryAttribute("billing")]
        [NUnit.Framework.TestCaseAttribute("", "", "115 Arizona Parkway", "Langtang", "36800-647", "+234 (683) 231-9702", "20", "Gongju", null)]
        public virtual void BillingAddressWithoutTheFirstNameAndTheLastName(string usernameB, string lastnameB, string streetB, string cityB, string zipCodeB, string phoneB, string numberCountryB, string regionB, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ui",
                    "negative",
                    "billing"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Billing address without the first name and the last name", @__tags);
#line 37
    this.ScenarioSetup(scenarioInfo);
#line 38
        testRunner.Given("The user is a customer", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 39
        testRunner.And("The user is on the checkout page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 40
  testRunner.And("The user clicks the checkbox Bill to this address", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 41
  testRunner.And("The user clicks the checkbox Ship to this address", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 42
        testRunner.When(string.Format("The user specifies  in billing address all fields becides fields First name and L" +
                        "ast name as {0} {1} {2} {3}\t{4} {5} {6} {7}", usernameB, lastnameB, streetB, cityB, zipCodeB, phoneB, numberCountryB, regionB), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 43
        testRunner.And("The user tries to complete the addressing step", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 44
        testRunner.Then("The user should be notified that the \"First name\" in the block \"Shipping address\"" +
                    " is required", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 45
  testRunner.And("The user should be notified that the \"Last name\" in the block \"Shipping address\" " +
                    "is required", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Billing address without the city and the postcode / zip code and Shipping address" +
            " without the Phone")]
        [NUnit.Framework.CategoryAttribute("ui")]
        [NUnit.Framework.CategoryAttribute("negative")]
        public virtual void BillingAddressWithoutTheCityAndThePostcodeZipCodeAndShippingAddressWithoutThePhone()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Billing address without the city and the postcode / zip code and Shipping address" +
                    " without the Phone", new string[] {
                        "ui",
                        "negative"});
#line 51
    this.ScenarioSetup(scenarioInfo);
#line 52
        testRunner.Given("The user is a customer", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 53
        testRunner.And("The user is on the checkout page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 54
  testRunner.And("The user clicks the checkbox Bill to this address", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "UsernameB",
                        "LastnameB",
                        "StreetB",
                        "CityB",
                        "ZipCodeB",
                        "PhoneB",
                        "NumberCountryB",
                        "RegionB"});
            table1.AddRow(new string[] {
                        "August",
                        "Accomb",
                        "8 Grasskamp Trail",
                        "",
                        "",
                        "+81 (504) 678-7207",
                        "3",
                        "Cucutilla"});
#line 55
        testRunner.When("The user specifies  in billing address all fields becides fields City and Postcod" +
                    "e / zip code  as <UsernameB> <LastnameB> <StreetB> <CityB> <ZipCodeB> <PhoneB> <" +
                    "NumberCountryB> <RegionB>", ((string)(null)), table1, "When ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "UsernameS",
                        "LastnameS",
                        "StreetS",
                        "CityS",
                        "ZipCodeS",
                        "PhoneS",
                        "NumberCountryS",
                        "RegionS"});
            table2.AddRow(new string[] {
                        "Natty",
                        "Davescu",
                        "549 Dawn Parkway",
                        "Talisay",
                        "0409-7938",
                        "",
                        "22",
                        "Libertad"});
#line 58
  testRunner.And("The user specifies  in shipping address all fields becides fields Phone as <Usern" +
                    "ameS> <LastnameS> <StreetS> <CityS>\t<ZipCodeS> <PhoneS> <NumberCountryS> <Region" +
                    "S>", ((string)(null)), table2, "And ");
#line 61
        testRunner.And("The user  tries to complete the addressing step", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 62
        testRunner.Then("The user should be notified that field \"City\" in the block \"Shipping address\" is " +
                    "required", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 63
  testRunner.And("The user should be notified that field \"the postcode /zip code\"  in the block \"Bi" +
                    "lling address\" is required", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 64
  testRunner.And("The user should be notified that the field \"Phone\" in shipping details is require" +
                    "d", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Shipping address with the Phone as string")]
        [NUnit.Framework.CategoryAttribute("ui")]
        [NUnit.Framework.CategoryAttribute("negative")]
        [NUnit.Framework.CategoryAttribute("shipping")]
        [NUnit.Framework.TestCaseAttribute("Natty", "Davescu", "549 Dawn Parkway", "Talisay", "0409-7938", "three-two-one-one", "22", "Libertad", null)]
        public virtual void ShippingAddressWithThePhoneAsString(string usernameS, string lastnameS, string streetS, string cityS, string zipCodeS, string phoneS, string numberCountryS, string regionS, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ui",
                    "negative",
                    "shipping"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Shipping address with the Phone as string", @__tags);
#line 68
    this.ScenarioSetup(scenarioInfo);
#line 69
        testRunner.Given("The user is a customer", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 70
        testRunner.And("The user is on the checkout page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 71
        testRunner.When("The user specifies  in shipping address all fields with correct data and field Ph" +
                    "one as string  as <UsernameB> <LastnameB> <StreetB> <CityB>\t<ZipCodeB> <PhoneB> " +
                    "<NumberCountryB> <RegionB>", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 72
        testRunner.And("The user  tries to complete the addressing step", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 73
        testRunner.Then("The user should be notified that the field \"Phone\" in the block \"Shipping address" +
                    "\" doesn`t correct", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Billing address with the Phone as string")]
        [NUnit.Framework.CategoryAttribute("ui")]
        [NUnit.Framework.CategoryAttribute("negative")]
        [NUnit.Framework.CategoryAttribute("billing")]
        [NUnit.Framework.TestCaseAttribute("Ximenes", "Traut", "3 Crowley Terrace", "Xugu", "52584-704", "three-two-one-one", "18", "Omīdcheh", null)]
        public virtual void BillingAddressWithThePhoneAsString(string usernameB, string lastnameB, string streetB, string cityB, string zipCodeB, string phoneB, string numberCountryB, string regionB, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ui",
                    "negative",
                    "billing"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Billing address with the Phone as string", @__tags);
#line 79
    this.ScenarioSetup(scenarioInfo);
#line 80
        testRunner.Given("The user is a customer", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 81
        testRunner.And("The user is on the checkout page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 82
  testRunner.And("The user clicks the checkbox Bill to this address", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 83
        testRunner.When(string.Format("The user specifies  in billing address all fields with correct data and field Pho" +
                        "ne as string as {0} {1} {2} {3}\t{4} {5} {6} {7}", usernameB, lastnameB, streetB, cityB, zipCodeB, phoneB, numberCountryB, regionB), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 84
  testRunner.And("The user  tries to complete the addressing step", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 85
        testRunner.Then("The user should be notified that the field \"Phone\" in the block \"Billing address\"" +
                    " doesn`t correct", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
