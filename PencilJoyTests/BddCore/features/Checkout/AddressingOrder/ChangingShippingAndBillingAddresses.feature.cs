// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.2.0.0
//      SpecFlow Generator Version:2.2.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace PencilJoyTests.BddCore.Features.Checkout.AddressingOrder
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.2.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Change value for fields in addresses blocks on checkout page")]
    public partial class ChangeValueForFieldsInAddressesBlocksOnCheckoutPageFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "ChangingShippingAndBillingAddresses.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Change value for fields in addresses blocks on checkout page", "\tIn order to change billing and shipping addresses data\r\n\tAs a customer\r\n\tThe use" +
                    "r wants to be able to change billing and shipping addresses data on the checkout" +
                    " page", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("The user changes value for fields in the block \"Shipping Address\"")]
        [NUnit.Framework.CategoryAttribute("positive")]
        [NUnit.Framework.CategoryAttribute("editValue")]
        [NUnit.Framework.CategoryAttribute("shipping")]
        [NUnit.Framework.TestCaseAttribute("Anica", "Wilcocke", "041 Rusk Parkway", "Baozi", "51727-0631", "+86 (606) 824-0816", "20", "Hudong", null)]
        public virtual void TheUserChangesValueForFieldsInTheBlockShippingAddress(string usernameS, string lastnameS, string streetS, string cityS, string zipCodeS, string phoneS, string numberCountryS, string regionS, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "positive",
                    "editValue",
                    "shipping"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("The user changes value for fields in the block \"Shipping Address\"", @__tags);
#line 7
this.ScenarioSetup(scenarioInfo);
#line 8
    testRunner.Given("The user is a customer", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 9
    testRunner.And("The user is on checkout page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 10
    testRunner.And(string.Format("The user fills fields for shipping address with data  as {0} {1} {2} {3}\t{4} {5} " +
                        "{6} {7}", usernameS, lastnameS, streetS, cityS, zipCodeS, phoneS, numberCountryS, regionS), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "LastName"});
            table1.AddRow(new string[] {
                        "Cortes"});
#line 11
    testRunner.When("The user edits the field \"Last name\" in the block \"Shipping address\"", ((string)(null)), table1, "When ");
#line 14
 testRunner.Then("The field \"Last name\" should be edited", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("The user changes value for fields in the block \"Billing Address\"")]
        [NUnit.Framework.CategoryAttribute("positive")]
        [NUnit.Framework.CategoryAttribute("editValue")]
        [NUnit.Framework.CategoryAttribute("shipping")]
        [NUnit.Framework.TestCaseAttribute("Jemimah", "Winston", "142 Lunder Junction", "Asen", "55154-6980", "+359 (948) 603-7618", "4", "Salinggara", null)]
        public virtual void TheUserChangesValueForFieldsInTheBlockBillingAddress(string usernameS, string lastnameS, string streetS, string cityS, string zipCodeS, string phoneS, string numberCountryS, string regionS, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "positive",
                    "editValue",
                    "shipping"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("The user changes value for fields in the block \"Billing Address\"", @__tags);
#line 20
this.ScenarioSetup(scenarioInfo);
#line 21
    testRunner.Given("The user is a customer", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 22
    testRunner.And("The user is on checkout page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 23
 testRunner.And("The user clicks the checkbox \"Billing to this address\" in the block \"Shipping add" +
                    "ress\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 24
    testRunner.And(string.Format("The user fills fields for shipping address with data  as {0} {1} {2} {3}\t{4} {5} " +
                        "{6} {7}", usernameS, lastnameS, streetS, cityS, zipCodeS, phoneS, numberCountryS, regionS), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "CityB"});
            table2.AddRow(new string[] {
                        "Kirove"});
#line 25
    testRunner.When("The user edits the field \"City\" in the block \"Billing address\"", ((string)(null)), table2, "When ");
#line 28
 testRunner.Then("The field \"City\" should be edited", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
