// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.2.0.0
//      SpecFlow Generator Version:2.2.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace PencilJoyTests.BddCore.Features.Checkout.AddressingOrder
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.2.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Add addresses to checkout page")]
    public partial class AddAddressesToCheckoutPageFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "FillingShippingAndBillingAddresses.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Add addresses to checkout page", "\tIn order to add billing and shipping addresses\r\n\tAs a customer\r\n\tThe user wants " +
                    "to be able to billing and shipping addresses to the checkout", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("The user fills fields for shipping and billing address")]
        [NUnit.Framework.CategoryAttribute("positive")]
        [NUnit.Framework.CategoryAttribute("fillingBothBlocks")]
        public virtual void TheUserFillsFieldsForShippingAndBillingAddress()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("The user fills fields for shipping and billing address", new string[] {
                        "positive",
                        "fillingBothBlocks"});
#line 7
this.ScenarioSetup(scenarioInfo);
#line 8
    testRunner.Given("The user is a customer", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 9
    testRunner.And("The user is on checkout page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "UsernameS",
                        "LastnameS",
                        "StreetS",
                        "CityS",
                        "ZipCodeS",
                        "PhoneS",
                        "NumberCountryS",
                        "RegionS"});
            table1.AddRow(new string[] {
                        "Jemimah",
                        "Winston",
                        "142 Lunder Junction",
                        "Asen",
                        "55154-6980",
                        "+359 (948) 603-7618",
                        "4",
                        "Salinggara"});
            table1.AddRow(new string[] {
                        "Rosie",
                        "Alwood",
                        "970 Maple Trail",
                        "Burgau",
                        "55315-251",
                        "+351 (652) 626-8183",
                        "20",
                        "Soi Dao"});
            table1.AddRow(new string[] {
                        "Lil",
                        "Bouzan",
                        "5 Walton Crossing",
                        "Ubaitab",
                        "55289-091",
                        "+55 (290) 603-7614",
                        "12",
                        "Jdaidet"});
            table1.AddRow(new string[] {
                        "Gerty",
                        "Eagles",
                        "13911 Everett Pass",
                        "Eslāmāb",
                        "0924-5701",
                        "+98 (540) 526-5197",
                        "12",
                        "Lumsden"});
            table1.AddRow(new string[] {
                        "Wendye",
                        "Dury",
                        "27480 Melvin Street",
                        "Shipaid",
                        "10590-0001",
                        "+86 (245) 871-8082",
                        "13",
                        "Panambi"});
            table1.AddRow(new string[] {
                        "Natty",
                        "Davescu",
                        "549 Dawn Parkway",
                        "Talisay",
                        "0409-7938",
                        "+63 (655) 490-8096",
                        "22",
                        "Libertad"});
#line 10
    testRunner.And("The user fills fields for shipping address with correct data:", ((string)(null)), table1, "And ");
#line 18
 testRunner.And("The user clicks the checkbox \"Bill to this address\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "UsernameB",
                        "LastnameB",
                        "StreetB",
                        "CityB",
                        "ZipCodeB",
                        "PhoneB",
                        "NumberCountryB",
                        "RegionB"});
            table2.AddRow(new string[] {
                        "Olenolin",
                        "Lighter",
                        "61 Evergreen Crossing",
                        "Paris 06",
                        "0268-0639",
                        "+33 (860) 710-6683",
                        "20",
                        "Huallanca"});
            table2.AddRow(new string[] {
                        "Herb",
                        "Cohen",
                        "115 Golf View Road",
                        "Yao’an",
                        "49260-615",
                        "+86 (267) 782-8010",
                        "13",
                        "Chornoliztsi"});
            table2.AddRow(new string[] {
                        "Margalit",
                        "Cochern",
                        "672 Utah Plaza",
                        "Brylivka",
                        "0362-9010",
                        "+380 (667) 550-6654",
                        "19",
                        "Krugersdorp"});
            table2.AddRow(new string[] {
                        "Ximenes",
                        "Traut",
                        "3 Crowley Terrace",
                        "Xugu",
                        "52584-704",
                        "+86 (192) 784-2660",
                        "18",
                        "Omīdcheh"});
            table2.AddRow(new string[] {
                        "Barbi",
                        "D\'orsay",
                        "3108 Northwestern",
                        "Panyambungan",
                        "43063-445",
                        "+62 (563) 802-6203",
                        "14",
                        "Malasin"});
            table2.AddRow(new string[] {
                        "August",
                        "Accomb",
                        "8 Grasskamp Trail",
                        "Kuroiso",
                        "0093-7206",
                        "+81 (504) 678-7207",
                        "3",
                        "Cucutilla"});
            table2.AddRow(new string[] {
                        "Grace",
                        "Chictto",
                        "115 Arizona Parkway",
                        "Langtang",
                        "36800-647",
                        "+234 (683) 231-9702",
                        "20",
                        "Gongju"});
#line 19
 testRunner.And("The user fills fields for billing address with correct data:", ((string)(null)), table2, "And ");
#line 28
 testRunner.When("All fields in the Billing ahd Shipping are filled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 29
 testRunner.Then("The values in Blocks should be difference", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("The user fills fields for shipping address, the billing address is equal shipping" +
            " address")]
        [NUnit.Framework.CategoryAttribute("ShippingAddressGeneral")]
        [NUnit.Framework.CategoryAttribute("positive")]
        [NUnit.Framework.CategoryAttribute("filling")]
        [NUnit.Framework.TestCaseAttribute("Anica", "Wilcocke", "041 Rusk Parkway", "Baozi", "51727-0631", "+86 (606) 824-0816", "20", "Hudong", null)]
        public virtual void TheUserFillsFieldsForShippingAddressTheBillingAddressIsEqualShippingAddress(string usernameS, string lastnameS, string streetS, string cityS, string zipCodeS, string phoneS, string numberCountryS, string regionS, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ShippingAddressGeneral",
                    "positive",
                    "filling"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("The user fills fields for shipping address, the billing address is equal shipping" +
                    " address", @__tags);
#line 32
this.ScenarioSetup(scenarioInfo);
#line 33
    testRunner.Given("The user is a customer", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 34
    testRunner.And("The user is on checkout page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 35
    testRunner.And(string.Format("The user fills fields for shipping address with correct data as {0} {1} {2} {3}\t{" +
                        "4} {5} {6} {7}", usernameS, lastnameS, streetS, cityS, zipCodeS, phoneS, numberCountryS, regionS), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 36
 testRunner.And("The user clicks the checkbox \'Bill to this address\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 37
    testRunner.When("The user clicks the button \'Place your order\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 38
    testRunner.Then("The page is redirected to successful page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("The user fills fields for billing address, the shipping address is equal billing " +
            "address")]
        [NUnit.Framework.CategoryAttribute("BillingAddressGeneral")]
        [NUnit.Framework.CategoryAttribute("positive")]
        [NUnit.Framework.CategoryAttribute("filling")]
        [NUnit.Framework.TestCaseAttribute("Anica", "Wilcocke", "041 Rusk Parkway", "Baozi", "51727-0631", "+86 (606) 824-0816", "20", "Hudong", null)]
        public virtual void TheUserFillsFieldsForBillingAddressTheShippingAddressIsEqualBillingAddress(string usernameS, string lastnameS, string streetS, string cityS, string zipCodeS, string phoneS, string numberCountryS, string regionS, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "BillingAddressGeneral",
                    "positive",
                    "filling"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("The user fills fields for billing address, the shipping address is equal billing " +
                    "address", @__tags);
#line 44
this.ScenarioSetup(scenarioInfo);
#line 45
    testRunner.Given("The user is a customer", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 46
    testRunner.And("The user is on checkout page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 47
    testRunner.And("The user fills fields for billing address with correct data as <UsernameB> <Lastn" +
                    "ameB> <StreetB> <CityB>\t<ZipCodeB> <PhoneB> <NumberCountryB> <RegionB>", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 48
 testRunner.And("The user clicks the checkbox \"Ship to this address\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 49
    testRunner.When("The user clicks the button \"Place your order\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 50
    testRunner.Then("Page is redirected to successful page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Specifying State/Region name manually for country with defined State/Region for s" +
            "hipping address")]
        [NUnit.Framework.CategoryAttribute("positive")]
        [NUnit.Framework.CategoryAttribute("filling")]
        [NUnit.Framework.CategoryAttribute("country")]
        [NUnit.Framework.CategoryAttribute("shipping")]
        [NUnit.Framework.TestCaseAttribute("USA", null)]
        [NUnit.Framework.TestCaseAttribute("United Kingdom", null)]
        public virtual void SpecifyingStateRegionNameManuallyForCountryWithDefinedStateRegionForShippingAddress(string country, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "positive",
                    "filling",
                    "country",
                    "shipping"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Specifying State/Region name manually for country with defined State/Region for s" +
                    "hipping address", @__tags);
#line 56
this.ScenarioSetup(scenarioInfo);
#line 57
    testRunner.Given("The user is a customer", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 58
    testRunner.And("The user is on checkout page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 59
    testRunner.And("The user fills fields for shipping address with correct data", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 60
    testRunner.When(string.Format("The user clicks the field \"Country\" in the block \"Shipping address\" with {0}", country), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 61
    testRunner.Then("The field  \"State/Region\" should be dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Specifying State/Region name manually for country without State/Region defined fo" +
            "r shipping address")]
        [NUnit.Framework.CategoryAttribute("positive")]
        [NUnit.Framework.CategoryAttribute("filling")]
        [NUnit.Framework.CategoryAttribute("country")]
        [NUnit.Framework.CategoryAttribute("shipping")]
        [NUnit.Framework.TestCaseAttribute("Austria", null)]
        [NUnit.Framework.TestCaseAttribute("Belgium", null)]
        [NUnit.Framework.TestCaseAttribute("Brazil", null)]
        [NUnit.Framework.TestCaseAttribute("Canada", null)]
        [NUnit.Framework.TestCaseAttribute("Colombia", null)]
        [NUnit.Framework.TestCaseAttribute("Denmark", null)]
        [NUnit.Framework.TestCaseAttribute("Germany", null)]
        [NUnit.Framework.TestCaseAttribute("France", null)]
        [NUnit.Framework.TestCaseAttribute("Hong Kong", null)]
        [NUnit.Framework.TestCaseAttribute("Ireland", null)]
        [NUnit.Framework.TestCaseAttribute("Italy", null)]
        [NUnit.Framework.TestCaseAttribute("Korea", null)]
        [NUnit.Framework.TestCaseAttribute("Netherland", null)]
        [NUnit.Framework.TestCaseAttribute("Norway", null)]
        [NUnit.Framework.TestCaseAttribute("Singapore", null)]
        [NUnit.Framework.TestCaseAttribute("Spain", null)]
        [NUnit.Framework.TestCaseAttribute("Sweden", null)]
        [NUnit.Framework.TestCaseAttribute("Switzerland", null)]
        [NUnit.Framework.TestCaseAttribute("Taiwan", null)]
        public virtual void SpecifyingStateRegionNameManuallyForCountryWithoutStateRegionDefinedForShippingAddress(string country, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "positive",
                    "filling",
                    "country",
                    "shipping"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Specifying State/Region name manually for country without State/Region defined fo" +
                    "r shipping address", @__tags);
#line 68
this.ScenarioSetup(scenarioInfo);
#line 69
    testRunner.Given("The user is a customer", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 70
    testRunner.And("The user is on checkout page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 71
    testRunner.When(string.Format("The user clicks the field \"Country\" in the block \"Shipping address\" with {0}", country), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 72
    testRunner.Then("The field  \"State/Region\" should be textbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Specifying State/Region name manually for country with defined State/Region for b" +
            "illing address")]
        [NUnit.Framework.CategoryAttribute("positive")]
        [NUnit.Framework.CategoryAttribute("filling")]
        [NUnit.Framework.CategoryAttribute("country")]
        [NUnit.Framework.CategoryAttribute("billing")]
        [NUnit.Framework.TestCaseAttribute("USA", null)]
        [NUnit.Framework.TestCaseAttribute("United Kingdom", null)]
        public virtual void SpecifyingStateRegionNameManuallyForCountryWithDefinedStateRegionForBillingAddress(string country, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "positive",
                    "filling",
                    "country",
                    "billing"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Specifying State/Region name manually for country with defined State/Region for b" +
                    "illing address", @__tags);
#line 96
this.ScenarioSetup(scenarioInfo);
#line 97
    testRunner.Given("The user is a customer", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 98
    testRunner.And("The user is on checkout page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 99
 testRunner.And("The user clicks the checkbox \"Billing to this address\" in the block \"Shipping add" +
                    "ress\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 100
    testRunner.When(string.Format("The user clicks the field \"Country\" in the block \"Billing address\" with {0}", country), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 101
    testRunner.Then("The field  \"State/Region\" should be dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Specifying State/Region name manually for country without State/Region defined fo" +
            "r billing address")]
        [NUnit.Framework.CategoryAttribute("positive")]
        [NUnit.Framework.CategoryAttribute("filling")]
        [NUnit.Framework.CategoryAttribute("country")]
        [NUnit.Framework.CategoryAttribute("billing")]
        [NUnit.Framework.TestCaseAttribute("Austria", null)]
        [NUnit.Framework.TestCaseAttribute("Belgium", null)]
        [NUnit.Framework.TestCaseAttribute("Brazil", null)]
        [NUnit.Framework.TestCaseAttribute("Canada", null)]
        [NUnit.Framework.TestCaseAttribute("Colombia", null)]
        [NUnit.Framework.TestCaseAttribute("Denmark", null)]
        [NUnit.Framework.TestCaseAttribute("Germany", null)]
        [NUnit.Framework.TestCaseAttribute("France", null)]
        [NUnit.Framework.TestCaseAttribute("Hong Kong", null)]
        [NUnit.Framework.TestCaseAttribute("Ireland", null)]
        [NUnit.Framework.TestCaseAttribute("Italy", null)]
        [NUnit.Framework.TestCaseAttribute("Korea", null)]
        [NUnit.Framework.TestCaseAttribute("Netherland", null)]
        [NUnit.Framework.TestCaseAttribute("Norway", null)]
        [NUnit.Framework.TestCaseAttribute("Singapore", null)]
        [NUnit.Framework.TestCaseAttribute("Spain", null)]
        [NUnit.Framework.TestCaseAttribute("Sweden", null)]
        [NUnit.Framework.TestCaseAttribute("Switzerland", null)]
        [NUnit.Framework.TestCaseAttribute("Taiwan", null)]
        public virtual void SpecifyingStateRegionNameManuallyForCountryWithoutStateRegionDefinedForBillingAddress(string country, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "positive",
                    "filling",
                    "country",
                    "billing"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Specifying State/Region name manually for country without State/Region defined fo" +
                    "r billing address", @__tags);
#line 108
this.ScenarioSetup(scenarioInfo);
#line 109
    testRunner.Given("The user is a customer", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 110
    testRunner.And("The user is on checkout page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 111
 testRunner.And("The user clicks the checkbox \"Billing to this address\" in the block \"Shipping add" +
                    "ress\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 112
    testRunner.When(string.Format("The user clicks the field \"Country\" in the block \"Billing address\" with {0}", country), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 113
    testRunner.Then("The field  \"State/Region\" should be textbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("The user fills fields for shipping address with incorrect data, the billing addre" +
            "ss is equal shipping address")]
        [NUnit.Framework.CategoryAttribute("negative")]
        [NUnit.Framework.CategoryAttribute("filling")]
        [NUnit.Framework.CategoryAttribute("incorrectData")]
        [NUnit.Framework.TestCaseAttribute("15946", "Winston", "142 Lunder Junction", "Asen", "55154-6980", "+359 (948) 603-7618", "4", "Salinggara", null)]
        [NUnit.Framework.TestCaseAttribute("Rosie", "0649723", "970 Maple Trail", "Burgau", "55315-251", "+351 (652) 626-8183", "20", "Soi Dao", null)]
        [NUnit.Framework.TestCaseAttribute("Lil", "Bouzan", "5 Walton Crossing", "4545646", "55289-091", "+55 (290) 603-7614", "12", "Jdaidet", null)]
        [NUnit.Framework.TestCaseAttribute("Gerty", "Eagles", "13911 Everett Pass", "Eslāmāb", "Scoville", "+98 (540) 526-5197", "12", "Lumsden", null)]
        [NUnit.Framework.TestCaseAttribute("Wendye", "Dury", "27480 Melvin Street", "Shipaid", "10590-0001", "Eguia", "13", "Panambi", null)]
        [NUnit.Framework.TestCaseAttribute("Natty", "Davescu", "549 Dawn Parkway", "Talisay", "0409-7938", "+63 (655) 490-8096", "Chuanshan", "Libertad", null)]
        [NUnit.Framework.TestCaseAttribute("Olenolin", "Lightow", "61 Evergreen", "Paris", "0268-0639", "+33 (860) 710-6683", "20", "566464520", null)]
        public virtual void TheUserFillsFieldsForShippingAddressWithIncorrectDataTheBillingAddressIsEqualShippingAddress(string usernameS, string lastnameS, string streetS, string cityS, string zipCodeS, string phoneS, string numberCountryS, string regionS, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "negative",
                    "filling",
                    "incorrectData"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("The user fills fields for shipping address with incorrect data, the billing addre" +
                    "ss is equal shipping address", @__tags);
#line 137
this.ScenarioSetup(scenarioInfo);
#line 138
    testRunner.Given("The user is a customer", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 139
    testRunner.And("The user is on checkout page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 140
    testRunner.And(string.Format("The user fills fields for shipping address with incorrect data as {0} {1} {2} {3}" +
                        "\t{4} {5} {6} {7}", usernameS, lastnameS, streetS, cityS, zipCodeS, phoneS, numberCountryS, regionS), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 141
    testRunner.And("clicks the checkbox \"Bill to this address\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 142
    testRunner.When("The user clicks the button \"Place your order\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 143
    testRunner.Then("Page doesn`t redirected to successful page and shipping`s fields, which haven`t p" +
                    "assed, get a red border.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("The user fills fields for billing address with incorrect data, the shipping addre" +
            "ss is equal billing address")]
        [NUnit.Framework.CategoryAttribute("negative")]
        [NUnit.Framework.CategoryAttribute("incorrectData")]
        [NUnit.Framework.CategoryAttribute("filling")]
        [NUnit.Framework.TestCaseAttribute("1216+502", "Cohen", "115 Golf View Road", "Yao’an", "49260-615", "+86 (267) 782-8010", "13", "Chornoliztsi", null)]
        [NUnit.Framework.TestCaseAttribute("Margalit", "132466", "672 Utah Plaza", "Brylivka", "0362-9010", "+380 (667) 550-6654", "19", "Krugersdorp", null)]
        [NUnit.Framework.TestCaseAttribute("Ximenes", "Traut", "3 Crowley Terrace", "456465", "52584-704", "+86 (192) 784-2660", "18", "Omīdcheh", null)]
        [NUnit.Framework.TestCaseAttribute("Barbi", "D\'orsay", "3108 Northwestern", "Panyambu", "Hudong", "+62 (563) 802-6203", "14", "Malasin", null)]
        [NUnit.Framework.TestCaseAttribute("Anica", "Wilcoce", "041 Rusk Parkway", "Baozi", "51727-0631", "Xinpeicun", "20", "Hudong", null)]
        [NUnit.Framework.TestCaseAttribute("August", "Accomb", "8 Grasskamp Trail", "Kuroiso", "0093-7206", "+81 (504) 678-7207", "Kearsley", "Cucutilla", null)]
        [NUnit.Framework.TestCaseAttribute("Grace", "Chiccho", "115 Arizona Parkway", "Langtang", "36800-647", "+234 (683) 231-9702", "20", "64245642", null)]
        public virtual void TheUserFillsFieldsForBillingAddressWithIncorrectDataTheShippingAddressIsEqualBillingAddress(string usernameB, string lastnameB, string streetB, string cityB, string zipCodeB, string phoneB, string numberCountryB, string regionB, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "negative",
                    "incorrectData",
                    "filling"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("The user fills fields for billing address with incorrect data, the shipping addre" +
                    "ss is equal billing address", @__tags);
#line 155
this.ScenarioSetup(scenarioInfo);
#line 156
    testRunner.Given("The user is a customer", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 157
    testRunner.And("The user is on checkout page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 158
    testRunner.And(string.Format("The user fills fields for billing address with incorrect data  as {0} {1} {2} {3}" +
                        "\t{4} {5} {6} {7}", usernameB, lastnameB, streetB, cityB, zipCodeB, phoneB, numberCountryB, regionB), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 159
 testRunner.And("The user clicks the checkbox \"Ship to this address\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 160
    testRunner.When("The user clicks the button \"Place your order\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 161
    testRunner.Then("Page doesn`t redirected to successful page and billing address` fields, which hav" +
                    "en`t passed, get a red border.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("The user should blocked to click any fields and checkbox in the block \"Shipping a" +
            "ddress\"")]
        [NUnit.Framework.CategoryAttribute("negative")]
        [NUnit.Framework.CategoryAttribute("blockedControllers")]
        public virtual void TheUserShouldBlockedToClickAnyFieldsAndCheckboxInTheBlockShippingAddress()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("The user should blocked to click any fields and checkbox in the block \"Shipping a" +
                    "ddress\"", new string[] {
                        "negative",
                        "blockedControllers"});
#line 173
this.ScenarioSetup(scenarioInfo);
#line 174
    testRunner.Given("The user is a customer", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 175
    testRunner.And("The user is on checkout page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 176
    testRunner.When("The user clicks the checkbox \"Ship to this address\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 177
    testRunner.Then("The fields and checkbox in block \"Shipping address\" doesn`t available.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
